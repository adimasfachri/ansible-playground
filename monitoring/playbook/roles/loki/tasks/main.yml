---
    - name: Install unzip 
      ansible.builtin.apt:
        name: unzip
        state: present

    - name: Check if loki is installed.
      ansible.builtin.stat:
        path: /usr/local/bin/loki"
      register: loki_bin

    - name: Unarchive loki
      ansible.builtin.unarchive:
        src: https://github.com/grafana/loki/releases/download/v2.8.0/loki-linux-amd64.zip
        dest: /usr/local/bin
        remote_src: yes
      when: not loki_bin.stat.exists

    - name: Rename loki
      ansible.builtin.command: 
        creates: /usr/local/bin/loki
        cmd: mv /usr/local/bin/loki-linux-amd64 /usr/local/bin/loki
        

    - name: Loki config dir
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ loki_config_dir }}"
        - "{{ loki_config_dir }}/backup"
        - "{{ loki_db_dir }}"
      when: not loki_bin.stat.exists

    - name: Copy config loki
      ansible.builtin.template:
        src: templates/loki.yaml.j2
        dest: /etc/loki/loki.yaml

    - name: Create systemd for loki
      ansible.builtin.template:
        src: templates/loki.service.j2
        dest: /etc/systemd/system/loki.service

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start loki Service
      ansible.builtin.systemd:
        state: started
        name: loki
        enabled: yes
      when: not loki_bin.stat.exists

    
